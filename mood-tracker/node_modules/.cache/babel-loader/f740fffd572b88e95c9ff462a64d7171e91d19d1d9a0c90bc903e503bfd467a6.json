{"ast":null,"code":"var _jsxFileName = \"/Users/aoifem/SoftwareDevelopment/IndividualProject/SourceFiles/mood-tracker/src/Viewer.js\";\nimport React, { Component } from 'react';\nimport { variables } from './Variables.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Viewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moods: [],\n      mood_id: 0,\n      mood_name: \"\",\n      mood_time: \"\"\n    };\n  }\n  refreshList() {\n    fetch(variables.API_URL + 'mood').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      return response.json();\n    }).then(data => {\n      this.setState({\n        moods: data\n      });\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  render() {\n    const {\n      moods,\n      mood_id,\n      mood_name,\n      mood_time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This is Viewer page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mood Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mood Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mood time stamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: moods.map(md => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: md.mood_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: md.mood_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: md.mood_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, md.mood_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","variables","jsxDEV","_jsxDEV","Viewer","constructor","props","state","moods","mood_id","mood_name","mood_time","refreshList","fetch","API_URL","then","response","ok","Error","statusText","json","data","setState","catch","error","console","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","md"],"sources":["/Users/aoifem/SoftwareDevelopment/IndividualProject/SourceFiles/mood-tracker/src/Viewer.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { variables } from './Variables.js';\nexport class Viewer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moods: [],\n            mood_id: 0,\n            mood_name: \"\",\n            mood_time: \"\"\n        }\n    }\n    refreshList() {\n        fetch(variables.API_URL + 'mood')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok ' + response.statusText);\n                }\n                return response.json();\n            })\n            .then(data => {\n                this.setState({ moods: data });\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    componentDidMount() {\n        this.refreshList();\n    }\n    render() {\n        const {\n            moods, mood_id, mood_name, mood_time\n        } = this.state\n\n        return (\n            <div>\n                <h3>This is Viewer page</h3>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>\n                                Mood Id\n                            </th>\n                            <th>\n                                Mood Name\n                            </th>\n                            <th>\n                                Mood time stamp\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {moods.map(md =>\n                            <tr key={md.mood_id}>\n                                <td>{md.mood_id}</td>\n                                <td>{md.mood_name}</td>\n                                <td>{md.mood_time}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,OAAO,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAClCK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACf,CAAC;EACL;EACAC,WAAWA,CAAA,EAAG;IACVC,KAAK,CAACZ,SAAS,CAACa,OAAO,GAAG,MAAM,CAAC,CAC5BC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGF,QAAQ,CAACG,UAAU,CAAC;MACzE;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACV,IAAI,CAACC,QAAQ,CAAC;QAAEd,KAAK,EAAEa;MAAK,CAAC,CAAC;IAClC,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACV;EAEAE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACd,WAAW,CAAC,CAAC;EACtB;EACAe,MAAMA,CAAA,EAAG;IACL,MAAM;MACFnB,KAAK;MAAEC,OAAO;MAAEC,SAAS;MAAEC;IAC/B,CAAC,GAAG,IAAI,CAACJ,KAAK;IAEd,oBACIJ,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B7B,OAAA;QAAO8B,SAAS,EAAC,qBAAqB;QAAAL,QAAA,gBAClCzB,OAAA;UAAAyB,QAAA,eACIzB,OAAA;YAAAyB,QAAA,gBACIzB,OAAA;cAAAyB,QAAA,EAAI;YAEJ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACL7B,OAAA;cAAAyB,QAAA,EAAI;YAEJ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACL7B,OAAA;cAAAyB,QAAA,EAAI;YAEJ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACR7B,OAAA;UAAAyB,QAAA,EACKpB,KAAK,CAAC0B,GAAG,CAACC,EAAE,iBACThC,OAAA;YAAAyB,QAAA,gBACIzB,OAAA;cAAAyB,QAAA,EAAKO,EAAE,CAAC1B;YAAO;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrB7B,OAAA;cAAAyB,QAAA,EAAKO,EAAE,CAACzB;YAAS;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvB7B,OAAA;cAAAyB,QAAA,EAAKO,EAAE,CAACxB;YAAS;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAHlBG,EAAE,CAAC1B,OAAO;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIf,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}