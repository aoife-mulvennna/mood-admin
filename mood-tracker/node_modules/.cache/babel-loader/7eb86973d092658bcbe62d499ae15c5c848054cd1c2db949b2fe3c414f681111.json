{"ast":null,"code":"var _jsxFileName = \"/Users/aoifem/SoftwareDevelopment/IndividualProject/SourceFiles/mood-tracker/src/Logger.js\";\nimport React, { Component } from 'react';\nimport { variables } from './Variables.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Logger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moods: [],\n      mood_id: 0,\n      mood_name: \"\"\n    };\n  }\n  refreshList() {\n    fetch(variables.API_URL + 'mood').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      return response.json();\n    }).then(data => {\n      this.setState({\n        moods: data\n      });\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  logClick(moodName) {\n    fetch(variables.API_URL + 'mood', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // mood_name: this.state.mood_name\n        mood_name: moodName\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      this.refreshList();\n    }).catch(error => {\n      alert('Failed');\n      console.error('Error:', error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"How do you feel today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary m-2\",\n        onClick: () => this.logClick('Happy'),\n        children: \"Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary m-2\",\n        onClick: () => this.logClick('Sad'),\n        children: \"Sad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","variables","jsxDEV","_jsxDEV","Logger","constructor","props","state","moods","mood_id","mood_name","refreshList","fetch","API_URL","then","response","ok","Error","statusText","json","data","setState","catch","error","console","componentDidMount","logClick","moodName","method","headers","body","JSON","stringify","res","result","alert","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","className","onClick"],"sources":["/Users/aoifem/SoftwareDevelopment/IndividualProject/SourceFiles/mood-tracker/src/Logger.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { variables } from './Variables.js';\n\nexport class Logger extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moods: [],\n            mood_id: 0,\n            mood_name: \"\"\n        }\n    }\n\n    refreshList() {\n        fetch(variables.API_URL + 'mood')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok ' + response.statusText);\n                }\n                return response.json();\n            })\n            .then(data => {\n                this.setState({ moods: data });\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    componentDidMount() {\n        this.refreshList();\n    }\n\n    logClick(moodName) {\n        fetch(variables.API_URL + 'mood', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                // mood_name: this.state.mood_name\n                mood_name: moodName\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                alert(result);\n                this.refreshList()\n            })\n            .catch((error) => {\n                alert('Failed');\n                console.error('Error:', error);\n            });\n\n    }\n    render() {\n        return (\n            <div>\n                <div>How do you feel today?</div>\n                <button type=\"button\" className=\"btn btn-primary m-2\" onClick={() => this.logClick('Happy')}>\n                    Happy\n                </button>\n                <button type=\"button\" className=\"btn btn-primary m-2\" onClick={() => this.logClick('Sad')}>\n                    Sad\n                </button>\n            </div>\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAClCK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE;IACf,CAAC;EACL;EAEAC,WAAWA,CAAA,EAAG;IACVC,KAAK,CAACX,SAAS,CAACY,OAAO,GAAG,MAAM,CAAC,CAC5BC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGF,QAAQ,CAACG,UAAU,CAAC;MACzE;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACV,IAAI,CAACC,QAAQ,CAAC;QAAEb,KAAK,EAAEY;MAAK,CAAC,CAAC;IAClC,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACV;EAEAE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACd,WAAW,CAAC,CAAC;EACtB;EAEAe,QAAQA,CAACC,QAAQ,EAAE;IACff,KAAK,CAACX,SAAS,CAACY,OAAO,GAAG,MAAM,EAAE;MAC9Be,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB;QACAtB,SAAS,EAAEiB;MACf,CAAC;IACL,CAAC,CAAC,CACGb,IAAI,CAACmB,GAAG,IAAIA,GAAG,CAACd,IAAI,CAAC,CAAC,CAAC,CACvBL,IAAI,CAAEoB,MAAM,IAAK;MACdC,KAAK,CAACD,MAAM,CAAC;MACb,IAAI,CAACvB,WAAW,CAAC,CAAC;IACtB,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MACdY,KAAK,CAAC,QAAQ,CAAC;MACfX,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EAEV;EACAa,MAAMA,CAAA,EAAG;IACL,oBACIjC,OAAA;MAAAkC,QAAA,gBACIlC,OAAA;QAAAkC,QAAA,EAAK;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjCtC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,qBAAqB;QAACC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAAClB,QAAQ,CAAC,OAAO,CAAE;QAAAW,QAAA,EAAC;MAE7F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,qBAAqB;QAACC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAAClB,QAAQ,CAAC,KAAK,CAAE;QAAAW,QAAA,EAAC;MAE3F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}