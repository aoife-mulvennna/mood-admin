{"ast":null,"code":"var _jsxFileName = \"/Users/aoifem/SoftwareDevelopment/IndividualProject/SourceFiles/mood-tracker/src/Logger.js\";\nimport React, { Component } from 'react';\nimport { variables } from './Variables.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Logger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moods: [],\n      mood_id: 0,\n      mood_name: \"\"\n    };\n  }\n  refreshList() {\n    fetch(variables.API_URL + 'mood').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      return response.json();\n    }).then(data => {\n      this.setState({\n        moods: data\n      });\n    });\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  logClick() {\n    fetch(variables.API_URL + 'mood', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mood_name: this.state.mood_name\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      this.refreshList();\n    }, error => {\n      alert('Failed');\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This is Logger page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary m-2\",\n        value: \"happy\",\n        onClick: () => this.logClick(),\n        children: \"Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary m-2\",\n        value: \"Sad\",\n        onClick: () => this.logClick(),\n        children: \"Sad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","variables","jsxDEV","_jsxDEV","Logger","constructor","props","state","moods","mood_id","mood_name","refreshList","fetch","API_URL","then","response","ok","Error","statusText","json","data","setState","componentDidMount","logClick","method","headers","body","JSON","stringify","res","result","alert","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","className","value","onClick"],"sources":["/Users/aoifem/SoftwareDevelopment/IndividualProject/SourceFiles/mood-tracker/src/Logger.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { variables } from './Variables.js';\n\nexport class Logger extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moods: [],\n            mood_id: 0,\n            mood_name: \"\"\n        }\n    }\n\n    refreshList() {\n        fetch(variables.API_URL + 'mood')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok ' + response.statusText);\n                }\n                return response.json();\n            })\n            .then(data => {\n                this.setState({ moods: data });\n            })\n    }\n\n    componentDidMount() {\n        this.refreshList();\n    }\n\n    logClick() {\n        fetch(variables.API_URL + 'mood', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                mood_name: this.state.mood_name,\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                alert(result);\n                this.refreshList()\n            }, (error) => {\n                alert('Failed');\n            })\n    }\n    render() {\n        return (\n            <div>\n                <h3>This is Logger page</h3>\n                <button type=\"button\" className=\"btn btn-primary m-2\" value=\"happy\" onClick={()=>this.logClick()}>\n                    Happy\n                </button>\n                <button type=\"button\" className=\"btn btn-primary m-2\" value=\"Sad\" onClick={()=>this.logClick()}>\n                    Sad\n                </button>\n            </div>\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAClCK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE;IACf,CAAC;EACL;EAEAC,WAAWA,CAAA,EAAG;IACVC,KAAK,CAACX,SAAS,CAACY,OAAO,GAAG,MAAM,CAAC,CAC5BC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGF,QAAQ,CAACG,UAAU,CAAC;MACzE;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACV,IAAI,CAACC,QAAQ,CAAC;QAAEb,KAAK,EAAEY;MAAK,CAAC,CAAC;IAClC,CAAC,CAAC;EACV;EAEAE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACX,WAAW,CAAC,CAAC;EACtB;EAEAY,QAAQA,CAAA,EAAG;IACPX,KAAK,CAACX,SAAS,CAACY,OAAO,GAAG,MAAM,EAAE;MAC9BW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBlB,SAAS,EAAE,IAAI,CAACH,KAAK,CAACG;MAC1B,CAAC;IACL,CAAC,CAAC,CACGI,IAAI,CAACe,GAAG,IAAIA,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CACvBL,IAAI,CAAEgB,MAAM,IAAK;MACdC,KAAK,CAACD,MAAM,CAAC;MACb,IAAI,CAACnB,WAAW,CAAC,CAAC;IACtB,CAAC,EAAGqB,KAAK,IAAK;MACVD,KAAK,CAAC,QAAQ,CAAC;IACnB,CAAC,CAAC;EACV;EACAE,MAAMA,CAAA,EAAG;IACL,oBACI9B,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAA+B,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BnC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,qBAAqB;QAACC,KAAK,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACnB,QAAQ,CAAC,CAAE;QAAAW,QAAA,EAAC;MAElG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,qBAAqB;QAACC,KAAK,EAAC,KAAK;QAACC,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACnB,QAAQ,CAAC,CAAE;QAAAW,QAAA,EAAC;MAEhG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}